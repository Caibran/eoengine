{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "variables": {
    "containerName": "etheos-dev",
    "containerImage": "etheos.azurecr.io/etheos/dev"
  },
  "parameters": {
    "sqlDbUser": {
      "type": "string"
    },
    "sqlDbPass": {
      "type": "securestring"
    },
    "sqlDbHost": {
      "type": "string"
    },
    "sqlDbName": {
      "type": "string"
    },
    "imageRegistryPass": {
      "type": "securestring"
    },
    "storageAccountName": {
      "type": "string"
    },
    "storageAccountKey": {
      "type": "securestring"
    },
    "logsShare": {
      "type": "string"
    },
    "dataShare": {
      "type": "string"
    },
    "cpu": {
      "type": "string"
    },
    "memoryInGb": {
      "type": "string"
    }
  },
  "resources": [
    {
      "name": "etheos-dev",
      "type": "Microsoft.ContainerInstance/containerGroups",
      "apiVersion": "2021-07-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "containers": [
          {
            "name": "[variables('containerName')]",
            "properties": {
              "image": "[variables('containerImage')]",
              "resources": {
                "requests": {
                  "cpu": "[parameters('cpu')]",
                  "memoryInGB": "[parameters('memoryInGb')]"
                }
              },
              "ports": [
                {
                  "port": 8078
                }
              ],
              "volumeMounts": [
                {
                  "name": "logs",
                  "mountPath": "/logs"
                },
                {
                  "name": "data",
                  "mountPath": "/etheos/data"
                }
              ],
              "environmentVariables": [
                {
                  "name": "ETHEOS_DBPASS",
                  "secureValue": "[parameters('sqlDbPass')]"
                },
                {
                  "name": "ETHEOS_LOGOUT",
                  "value": "/logs/dev/stdout"
                },
                {
                  "name": "ETHEOS_LOGERR",
                  "value": "/logs/dev/stderr"
                },
                {
                  "name": "ETHEOS_WORLDDUMPFILE",
                  "value": "/logs/dev/world.bak.json"
                },
                {
                  "name": "ETHEOS_DBNAME",
                  "value": "[parameters('sqlDbName')]"
                },
                {
                  "name": "ETHEOS_DBHOST",
                  "value": "[parameters('sqlDbHost')]"
                },
                {
                  "name": "ETHEOS_DBUSER",
                  "value": "[parameters('sqlDbUser')]"
                },
                {
                  "name": "ETHEOS_BCRYPTWORKLOAD",
                  "value": "12"
                },
                {
                  "name": "ETHEOS_THREADPOOLTHREADS",
                  "value": "4"
                }
              ]
            }
          }
        ],
        "imageRegistryCredentials": [
          {
            "server": "etheos.azurecr.io",
            "username": "etheos",
            "password": "[parameters('imageRegistryPass')]"
          }
        ],
        "osType": "Linux",
        "ipAddress": {
          "type": "Public",
          "ports": [
            {
              "protocol": "TCP",
              "port": 8078
            }
          ],
          "dnsNameLabel": "etheos-dev"
        },
        "volumes": [
          {
            "name": "logs",
            "azureFile": {
              "shareName": "[parameters('logsShare')]",
              "storageAccountName": "[parameters('storageAccountName')]",
              "storageAccountKey": "[parameters('storageAccountKey')]",
              "readOnly": false
            }
          },
          {
            "name": "data",
            "azureFile": {
              "shareName": "[parameters('dataShare')]",
              "storageAccountName": "[parameters('storageAccountName')]",
              "storageAccountKey": "[parameters('storageAccountKey')]",
              "readOnly": true
            }
          }
        ]
      }
    }
  ]
}